Here's the link to the result "https://app.codility.com/demo/results/trainingX7FUY2-JZY/"

The basics of this algorithm is to solve a depth first search of a binary tree.

A binary tree is a type of data structure where each node has at most two children, referred to as the left child and the right child. The topmost node is called the root, and nodes with no children are called leaves.

In a depth first search (DFS), we start at the root and explore as far as possible along each branch before backtracking. There are three common ways to perform a DFS on a binary tree:

1. Preorder Traversal: Visit the root node, then recursively visit the left subtree, followed by the right subtree.
2. Inorder Traversal: Recursively visit the left subtree, then visit the root node, and finally the right subtree.
3. Postorder Traversal: Recursively visit the left subtree, then the right subtree, and finally the root node.

Each of these traversal methods can be implemented using either recursion or an explicit stack.
